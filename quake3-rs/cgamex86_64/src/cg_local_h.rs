pub type impactSound_t = u32;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct markPoly_s {
    pub prevMark: *mut crate::cg_local_h::markPoly_s,
    pub nextMark: *mut crate::cg_local_h::markPoly_s,
    pub time: i32,
    pub markShader: crate::src::qcommon::q_shared::qhandle_t,
    pub alphaFade: crate::src::qcommon::q_shared::qboolean,
    pub color: [f32; 4],
    pub poly: crate::tr_types_h::poly_t,
    pub verts: [crate::tr_types_h::polyVert_t; 10],
}
pub type markPoly_t = crate::cg_local_h::markPoly_s;
pub const IMPACTSOUND_FLESH: crate::cg_local_h::impactSound_t = 2;
pub const IMPACTSOUND_METAL: crate::cg_local_h::impactSound_t = 1;
pub const IMPACTSOUND_DEFAULT: crate::cg_local_h::impactSound_t = 0;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct lerpFrame_t {
    pub oldFrame: i32,
    pub oldFrameTime: i32,
    pub frame: i32,
    pub frameTime: i32,
    pub backlerp: f32,
    pub yawAngle: f32,
    pub yawing: crate::src::qcommon::q_shared::qboolean,
    pub pitchAngle: f32,
    pub pitching: crate::src::qcommon::q_shared::qboolean,
    pub animationNumber: i32,
    pub animation: *mut crate::bg_public_h::animation_t,
    pub animationTime: i32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct playerEntity_t {
    pub legs: crate::cg_local_h::lerpFrame_t,
    pub torso: crate::cg_local_h::lerpFrame_t,
    pub flag: crate::cg_local_h::lerpFrame_t,
    pub painTime: i32,
    pub painDirection: i32,
    pub lightningFiring: i32,
    pub railFireTime: i32,
    pub barrelAngle: f32,
    pub barrelTime: i32,
    pub barrelSpinning: crate::src::qcommon::q_shared::qboolean,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct centity_s {
    pub currentState: crate::src::qcommon::q_shared::entityState_t,
    pub nextState: crate::src::qcommon::q_shared::entityState_t,
    pub interpolate: crate::src::qcommon::q_shared::qboolean,
    pub currentValid: crate::src::qcommon::q_shared::qboolean,
    pub muzzleFlashTime: i32,
    pub previousEvent: i32,
    pub teleportFlag: i32,
    pub trailTime: i32,
    pub dustTrailTime: i32,
    pub miscTime: i32,
    pub snapShotTime: i32,
    pub pe: crate::cg_local_h::playerEntity_t,
    pub errorTime: i32,
    pub errorOrigin: crate::src::qcommon::q_shared::vec3_t,
    pub errorAngles: crate::src::qcommon::q_shared::vec3_t,
    pub extrapolated: crate::src::qcommon::q_shared::qboolean,
    pub rawOrigin: crate::src::qcommon::q_shared::vec3_t,
    pub rawAngles: crate::src::qcommon::q_shared::vec3_t,
    pub beamEnd: crate::src::qcommon::q_shared::vec3_t,
    pub lerpOrigin: crate::src::qcommon::q_shared::vec3_t,
    pub lerpAngles: crate::src::qcommon::q_shared::vec3_t,
}
pub type centity_t = crate::cg_local_h::centity_s;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct score_t {
    pub client: i32,
    pub score: i32,
    pub ping: i32,
    pub time: i32,
    pub scoreFlags: i32,
    pub powerUps: i32,
    pub accuracy: i32,
    pub impressiveCount: i32,
    pub excellentCount: i32,
    pub guantletCount: i32,
    pub defendCount: i32,
    pub assistCount: i32,
    pub captures: i32,
    pub perfect: crate::src::qcommon::q_shared::qboolean,
    pub team: i32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct cg_t {
    pub clientFrame: i32,
    pub clientNum: i32,
    pub demoPlayback: crate::src::qcommon::q_shared::qboolean,
    pub levelShot: crate::src::qcommon::q_shared::qboolean,
    pub deferredPlayerLoading: i32,
    pub loading: crate::src::qcommon::q_shared::qboolean,
    pub intermissionStarted: crate::src::qcommon::q_shared::qboolean,
    pub latestSnapshotNum: i32,
    pub latestSnapshotTime: i32,
    pub snap: *mut crate::cg_public_h::snapshot_t,
    pub nextSnap: *mut crate::cg_public_h::snapshot_t,
    pub activeSnapshots: [crate::cg_public_h::snapshot_t; 2],
    pub frameInterpolation: f32,
    pub thisFrameTeleport: crate::src::qcommon::q_shared::qboolean,
    pub nextFrameTeleport: crate::src::qcommon::q_shared::qboolean,
    pub frametime: i32,
    pub time: i32,
    pub oldTime: i32,
    pub physicsTime: i32,
    pub timelimitWarnings: i32,
    pub fraglimitWarnings: i32,
    pub mapRestart: crate::src::qcommon::q_shared::qboolean,
    pub renderingThirdPerson: crate::src::qcommon::q_shared::qboolean,
    pub hyperspace: crate::src::qcommon::q_shared::qboolean,
    pub predictedPlayerState: crate::src::qcommon::q_shared::playerState_t,
    pub predictedPlayerEntity: crate::cg_local_h::centity_t,
    pub validPPS: crate::src::qcommon::q_shared::qboolean,
    pub predictedErrorTime: i32,
    pub predictedError: crate::src::qcommon::q_shared::vec3_t,
    pub eventSequence: i32,
    pub predictableEvents: [i32; 16],
    pub stepChange: f32,
    pub stepTime: i32,
    pub duckChange: f32,
    pub duckTime: i32,
    pub landChange: f32,
    pub landTime: i32,
    pub weaponSelect: i32,
    pub autoAngles: crate::src::qcommon::q_shared::vec3_t,
    pub autoAxis: [crate::src::qcommon::q_shared::vec3_t; 3],
    pub autoAnglesFast: crate::src::qcommon::q_shared::vec3_t,
    pub autoAxisFast: [crate::src::qcommon::q_shared::vec3_t; 3],
    pub refdef: crate::tr_types_h::refdef_t,
    pub refdefViewAngles: crate::src::qcommon::q_shared::vec3_t,
    pub zoomed: crate::src::qcommon::q_shared::qboolean,
    pub zoomTime: i32,
    pub zoomSensitivity: f32,
    pub infoScreenText: [i8; 1024],
    pub scoresRequestTime: i32,
    pub numScores: i32,
    pub selectedScore: i32,
    pub teamScores: [i32; 2],
    pub scores: [crate::cg_local_h::score_t; 64],
    pub showScores: crate::src::qcommon::q_shared::qboolean,
    pub scoreBoardShowing: crate::src::qcommon::q_shared::qboolean,
    pub scoreFadeTime: i32,
    pub killerName: [i8; 32],
    pub spectatorList: [i8; 1024],
    pub spectatorLen: i32,
    pub spectatorWidth: f32,
    pub spectatorTime: i32,
    pub spectatorPaintX: i32,
    pub spectatorPaintX2: i32,
    pub spectatorOffset: i32,
    pub spectatorPaintLen: i32,
    pub centerPrintTime: i32,
    pub centerPrintCharWidth: i32,
    pub centerPrintY: i32,
    pub centerPrint: [i8; 1024],
    pub centerPrintLines: i32,
    pub lowAmmoWarning: i32,
    pub crosshairClientNum: i32,
    pub crosshairClientTime: i32,
    pub powerupActive: i32,
    pub powerupTime: i32,
    pub attackerTime: i32,
    pub voiceTime: i32,
    pub rewardStack: i32,
    pub rewardTime: i32,
    pub rewardCount: [i32; 10],
    pub rewardShader: [crate::src::qcommon::q_shared::qhandle_t; 10],
    pub rewardSound: [crate::src::qcommon::q_shared::qhandle_t; 10],
    pub soundBufferIn: i32,
    pub soundBufferOut: i32,
    pub soundTime: i32,
    pub soundBuffer: [crate::src::qcommon::q_shared::qhandle_t; 20],
    pub warmup: i32,
    pub warmupCount: i32,
    pub itemPickup: i32,
    pub itemPickupTime: i32,
    pub itemPickupBlendTime: i32,
    pub weaponSelectTime: i32,
    pub weaponAnimation: i32,
    pub weaponAnimationTime: i32,
    pub damageTime: f32,
    pub damageX: f32,
    pub damageY: f32,
    pub damageValue: f32,
    pub headYaw: f32,
    pub headEndPitch: f32,
    pub headEndYaw: f32,
    pub headEndTime: i32,
    pub headStartPitch: f32,
    pub headStartYaw: f32,
    pub headStartTime: i32,
    pub v_dmg_time: f32,
    pub v_dmg_pitch: f32,
    pub v_dmg_roll: f32,
    pub bobfracsin: f32,
    pub bobcycle: i32,
    pub xyspeed: f32,
    pub nextOrbitTime: i32,
    pub testModelEntity: crate::tr_types_h::refEntity_t,
    pub testModelName: [i8; 64],
    pub testGun: crate::src::qcommon::q_shared::qboolean,
}
pub type footstep_t = u32;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct clientInfo_t {
    pub infoValid: crate::src::qcommon::q_shared::qboolean,
    pub name: [i8; 64],
    pub team: crate::bg_public_h::team_t,
    pub botSkill: i32,
    pub color1: crate::src::qcommon::q_shared::vec3_t,
    pub color2: crate::src::qcommon::q_shared::vec3_t,
    pub c1RGBA: [crate::src::qcommon::q_shared::byte; 4],
    pub c2RGBA: [crate::src::qcommon::q_shared::byte; 4],
    pub score: i32,
    pub location: i32,
    pub health: i32,
    pub armor: i32,
    pub curWeapon: i32,
    pub handicap: i32,
    pub wins: i32,
    pub losses: i32,
    pub teamTask: i32,
    pub teamLeader: crate::src::qcommon::q_shared::qboolean,
    pub powerups: i32,
    pub medkitUsageTime: i32,
    pub invulnerabilityStartTime: i32,
    pub invulnerabilityStopTime: i32,
    pub breathPuffTime: i32,
    pub modelName: [i8; 64],
    pub skinName: [i8; 64],
    pub headModelName: [i8; 64],
    pub headSkinName: [i8; 64],
    pub redTeam: [i8; 32],
    pub blueTeam: [i8; 32],
    pub deferred: crate::src::qcommon::q_shared::qboolean,
    pub newAnims: crate::src::qcommon::q_shared::qboolean,
    pub fixedlegs: crate::src::qcommon::q_shared::qboolean,
    pub fixedtorso: crate::src::qcommon::q_shared::qboolean,
    pub headOffset: crate::src::qcommon::q_shared::vec3_t,
    pub footsteps: crate::cg_local_h::footstep_t,
    pub gender: crate::bg_public_h::gender_t,
    pub legsModel: crate::src::qcommon::q_shared::qhandle_t,
    pub legsSkin: crate::src::qcommon::q_shared::qhandle_t,
    pub torsoModel: crate::src::qcommon::q_shared::qhandle_t,
    pub torsoSkin: crate::src::qcommon::q_shared::qhandle_t,
    pub headModel: crate::src::qcommon::q_shared::qhandle_t,
    pub headSkin: crate::src::qcommon::q_shared::qhandle_t,
    pub modelIcon: crate::src::qcommon::q_shared::qhandle_t,
    pub animations: [crate::bg_public_h::animation_t; 37],
    pub sounds: [crate::src::qcommon::q_shared::sfxHandle_t; 32],
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct weaponInfo_s {
    pub registered: crate::src::qcommon::q_shared::qboolean,
    pub item: *mut crate::bg_public_h::gitem_t,
    pub handsModel: crate::src::qcommon::q_shared::qhandle_t,
    pub weaponModel: crate::src::qcommon::q_shared::qhandle_t,
    pub barrelModel: crate::src::qcommon::q_shared::qhandle_t,
    pub flashModel: crate::src::qcommon::q_shared::qhandle_t,
    pub weaponMidpoint: crate::src::qcommon::q_shared::vec3_t,
    pub flashDlight: f32,
    pub flashDlightColor: crate::src::qcommon::q_shared::vec3_t,
    pub flashSound: [crate::src::qcommon::q_shared::sfxHandle_t; 4],
    pub weaponIcon: crate::src::qcommon::q_shared::qhandle_t,
    pub ammoIcon: crate::src::qcommon::q_shared::qhandle_t,
    pub ammoModel: crate::src::qcommon::q_shared::qhandle_t,
    pub missileModel: crate::src::qcommon::q_shared::qhandle_t,
    pub missileSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub missileTrailFunc: Option<
        unsafe extern "C" fn(
            _: *mut crate::cg_local_h::centity_t,
            _: *const crate::cg_local_h::weaponInfo_s,
        ) -> (),
    >,
    pub missileDlight: f32,
    pub missileDlightColor: crate::src::qcommon::q_shared::vec3_t,
    pub missileRenderfx: i32,
    pub ejectBrassFunc: Option<unsafe extern "C" fn(_: *mut crate::cg_local_h::centity_t) -> ()>,
    pub trailRadius: f32,
    pub wiTrailTime: f32,
    pub readySound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub firingSound: crate::src::qcommon::q_shared::sfxHandle_t,
}
pub type weaponInfo_t = crate::cg_local_h::weaponInfo_s;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct itemInfo_t {
    pub registered: crate::src::qcommon::q_shared::qboolean,
    pub models: [crate::src::qcommon::q_shared::qhandle_t; 4],
    pub icon: crate::src::qcommon::q_shared::qhandle_t,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct cgMedia_t {
    pub charsetShader: crate::src::qcommon::q_shared::qhandle_t,
    pub charsetProp: crate::src::qcommon::q_shared::qhandle_t,
    pub charsetPropGlow: crate::src::qcommon::q_shared::qhandle_t,
    pub charsetPropB: crate::src::qcommon::q_shared::qhandle_t,
    pub whiteShader: crate::src::qcommon::q_shared::qhandle_t,
    pub redFlagModel: crate::src::qcommon::q_shared::qhandle_t,
    pub blueFlagModel: crate::src::qcommon::q_shared::qhandle_t,
    pub neutralFlagModel: crate::src::qcommon::q_shared::qhandle_t,
    pub redFlagShader: [crate::src::qcommon::q_shared::qhandle_t; 3],
    pub blueFlagShader: [crate::src::qcommon::q_shared::qhandle_t; 3],
    pub flagShader: [crate::src::qcommon::q_shared::qhandle_t; 4],
    pub flagPoleModel: crate::src::qcommon::q_shared::qhandle_t,
    pub flagFlapModel: crate::src::qcommon::q_shared::qhandle_t,
    pub redFlagFlapSkin: crate::src::qcommon::q_shared::qhandle_t,
    pub blueFlagFlapSkin: crate::src::qcommon::q_shared::qhandle_t,
    pub neutralFlagFlapSkin: crate::src::qcommon::q_shared::qhandle_t,
    pub redFlagBaseModel: crate::src::qcommon::q_shared::qhandle_t,
    pub blueFlagBaseModel: crate::src::qcommon::q_shared::qhandle_t,
    pub neutralFlagBaseModel: crate::src::qcommon::q_shared::qhandle_t,
    pub armorModel: crate::src::qcommon::q_shared::qhandle_t,
    pub armorIcon: crate::src::qcommon::q_shared::qhandle_t,
    pub teamStatusBar: crate::src::qcommon::q_shared::qhandle_t,
    pub deferShader: crate::src::qcommon::q_shared::qhandle_t,
    pub gibAbdomen: crate::src::qcommon::q_shared::qhandle_t,
    pub gibArm: crate::src::qcommon::q_shared::qhandle_t,
    pub gibChest: crate::src::qcommon::q_shared::qhandle_t,
    pub gibFist: crate::src::qcommon::q_shared::qhandle_t,
    pub gibFoot: crate::src::qcommon::q_shared::qhandle_t,
    pub gibForearm: crate::src::qcommon::q_shared::qhandle_t,
    pub gibIntestine: crate::src::qcommon::q_shared::qhandle_t,
    pub gibLeg: crate::src::qcommon::q_shared::qhandle_t,
    pub gibSkull: crate::src::qcommon::q_shared::qhandle_t,
    pub gibBrain: crate::src::qcommon::q_shared::qhandle_t,
    pub smoke2: crate::src::qcommon::q_shared::qhandle_t,
    pub machinegunBrassModel: crate::src::qcommon::q_shared::qhandle_t,
    pub shotgunBrassModel: crate::src::qcommon::q_shared::qhandle_t,
    pub railRingsShader: crate::src::qcommon::q_shared::qhandle_t,
    pub railCoreShader: crate::src::qcommon::q_shared::qhandle_t,
    pub lightningShader: crate::src::qcommon::q_shared::qhandle_t,
    pub friendShader: crate::src::qcommon::q_shared::qhandle_t,
    pub balloonShader: crate::src::qcommon::q_shared::qhandle_t,
    pub connectionShader: crate::src::qcommon::q_shared::qhandle_t,
    pub selectShader: crate::src::qcommon::q_shared::qhandle_t,
    pub viewBloodShader: crate::src::qcommon::q_shared::qhandle_t,
    pub tracerShader: crate::src::qcommon::q_shared::qhandle_t,
    pub crosshairShader: [crate::src::qcommon::q_shared::qhandle_t; 10],
    pub lagometerShader: crate::src::qcommon::q_shared::qhandle_t,
    pub backTileShader: crate::src::qcommon::q_shared::qhandle_t,
    pub noammoShader: crate::src::qcommon::q_shared::qhandle_t,
    pub smokePuffShader: crate::src::qcommon::q_shared::qhandle_t,
    pub smokePuffRageProShader: crate::src::qcommon::q_shared::qhandle_t,
    pub shotgunSmokePuffShader: crate::src::qcommon::q_shared::qhandle_t,
    pub plasmaBallShader: crate::src::qcommon::q_shared::qhandle_t,
    pub waterBubbleShader: crate::src::qcommon::q_shared::qhandle_t,
    pub bloodTrailShader: crate::src::qcommon::q_shared::qhandle_t,
    pub numberShaders: [crate::src::qcommon::q_shared::qhandle_t; 11],
    pub shadowMarkShader: crate::src::qcommon::q_shared::qhandle_t,
    pub botSkillShaders: [crate::src::qcommon::q_shared::qhandle_t; 5],
    pub wakeMarkShader: crate::src::qcommon::q_shared::qhandle_t,
    pub bloodMarkShader: crate::src::qcommon::q_shared::qhandle_t,
    pub bulletMarkShader: crate::src::qcommon::q_shared::qhandle_t,
    pub burnMarkShader: crate::src::qcommon::q_shared::qhandle_t,
    pub holeMarkShader: crate::src::qcommon::q_shared::qhandle_t,
    pub energyMarkShader: crate::src::qcommon::q_shared::qhandle_t,
    pub quadShader: crate::src::qcommon::q_shared::qhandle_t,
    pub redQuadShader: crate::src::qcommon::q_shared::qhandle_t,
    pub quadWeaponShader: crate::src::qcommon::q_shared::qhandle_t,
    pub invisShader: crate::src::qcommon::q_shared::qhandle_t,
    pub regenShader: crate::src::qcommon::q_shared::qhandle_t,
    pub battleSuitShader: crate::src::qcommon::q_shared::qhandle_t,
    pub battleWeaponShader: crate::src::qcommon::q_shared::qhandle_t,
    pub hastePuffShader: crate::src::qcommon::q_shared::qhandle_t,
    pub bulletFlashModel: crate::src::qcommon::q_shared::qhandle_t,
    pub ringFlashModel: crate::src::qcommon::q_shared::qhandle_t,
    pub dishFlashModel: crate::src::qcommon::q_shared::qhandle_t,
    pub lightningExplosionModel: crate::src::qcommon::q_shared::qhandle_t,
    pub railExplosionShader: crate::src::qcommon::q_shared::qhandle_t,
    pub plasmaExplosionShader: crate::src::qcommon::q_shared::qhandle_t,
    pub bulletExplosionShader: crate::src::qcommon::q_shared::qhandle_t,
    pub rocketExplosionShader: crate::src::qcommon::q_shared::qhandle_t,
    pub grenadeExplosionShader: crate::src::qcommon::q_shared::qhandle_t,
    pub bfgExplosionShader: crate::src::qcommon::q_shared::qhandle_t,
    pub bloodExplosionShader: crate::src::qcommon::q_shared::qhandle_t,
    pub teleportEffectModel: crate::src::qcommon::q_shared::qhandle_t,
    pub teleportEffectShader: crate::src::qcommon::q_shared::qhandle_t,
    pub scoreboardName: crate::src::qcommon::q_shared::qhandle_t,
    pub scoreboardPing: crate::src::qcommon::q_shared::qhandle_t,
    pub scoreboardScore: crate::src::qcommon::q_shared::qhandle_t,
    pub scoreboardTime: crate::src::qcommon::q_shared::qhandle_t,
    pub medalImpressive: crate::src::qcommon::q_shared::qhandle_t,
    pub medalExcellent: crate::src::qcommon::q_shared::qhandle_t,
    pub medalGauntlet: crate::src::qcommon::q_shared::qhandle_t,
    pub medalDefend: crate::src::qcommon::q_shared::qhandle_t,
    pub medalAssist: crate::src::qcommon::q_shared::qhandle_t,
    pub medalCapture: crate::src::qcommon::q_shared::qhandle_t,
    pub quadSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub tracerSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub selectSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub useNothingSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub wearOffSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub footsteps: [[crate::src::qcommon::q_shared::sfxHandle_t; 4]; 7],
    pub sfx_lghit1: crate::src::qcommon::q_shared::sfxHandle_t,
    pub sfx_lghit2: crate::src::qcommon::q_shared::sfxHandle_t,
    pub sfx_lghit3: crate::src::qcommon::q_shared::sfxHandle_t,
    pub sfx_ric1: crate::src::qcommon::q_shared::sfxHandle_t,
    pub sfx_ric2: crate::src::qcommon::q_shared::sfxHandle_t,
    pub sfx_ric3: crate::src::qcommon::q_shared::sfxHandle_t,
    pub sfx_rockexp: crate::src::qcommon::q_shared::sfxHandle_t,
    pub sfx_plasmaexp: crate::src::qcommon::q_shared::sfxHandle_t,
    pub gibSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub gibBounce1Sound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub gibBounce2Sound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub gibBounce3Sound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub teleInSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub teleOutSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub noAmmoSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub respawnSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub talkSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub landSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub fallSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub jumpPadSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub oneMinuteSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub fiveMinuteSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub suddenDeathSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub threeFragSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub twoFragSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub oneFragSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub hitSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub hitSoundHighArmor: crate::src::qcommon::q_shared::sfxHandle_t,
    pub hitSoundLowArmor: crate::src::qcommon::q_shared::sfxHandle_t,
    pub hitTeamSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub impressiveSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub excellentSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub deniedSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub humiliationSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub assistSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub defendSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub firstImpressiveSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub firstExcellentSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub firstHumiliationSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub takenLeadSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub tiedLeadSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub lostLeadSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub voteNow: crate::src::qcommon::q_shared::sfxHandle_t,
    pub votePassed: crate::src::qcommon::q_shared::sfxHandle_t,
    pub voteFailed: crate::src::qcommon::q_shared::sfxHandle_t,
    pub watrInSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub watrOutSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub watrUnSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub flightSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub medkitSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub captureAwardSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub redScoredSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub blueScoredSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub redLeadsSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub blueLeadsSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub teamsTiedSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub captureYourTeamSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub captureOpponentSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub returnYourTeamSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub returnOpponentSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub takenYourTeamSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub takenOpponentSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub redFlagReturnedSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub blueFlagReturnedSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub enemyTookYourFlagSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub yourTeamTookEnemyFlagSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub youHaveFlagSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub holyShitSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub count3Sound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub count2Sound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub count1Sound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub countFightSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub countPrepareSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub regenSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub protectSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub n_healthSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub hgrenb1aSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub hgrenb2aSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub wstbimplSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub wstbimpmSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub wstbimpdSound: crate::src::qcommon::q_shared::sfxHandle_t,
    pub wstbactvSound: crate::src::qcommon::q_shared::sfxHandle_t,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct cgs_t {
    pub gameState: crate::src::qcommon::q_shared::gameState_t,
    pub glconfig: crate::tr_types_h::glconfig_t,
    pub screenXScale: f32,
    pub screenYScale: f32,
    pub screenXBias: f32,
    pub serverCommandSequence: i32,
    pub processedSnapshotNum: i32,
    pub localServer: crate::src::qcommon::q_shared::qboolean,
    pub gametype: crate::bg_public_h::gametype_t,
    pub dmflags: i32,
    pub teamflags: i32,
    pub fraglimit: i32,
    pub capturelimit: i32,
    pub timelimit: i32,
    pub maxclients: i32,
    pub mapname: [i8; 64],
    pub redTeam: [i8; 64],
    pub blueTeam: [i8; 64],
    pub voteTime: i32,
    pub voteYes: i32,
    pub voteNo: i32,
    pub voteModified: crate::src::qcommon::q_shared::qboolean,
    pub voteString: [i8; 1024],
    pub teamVoteTime: [i32; 2],
    pub teamVoteYes: [i32; 2],
    pub teamVoteNo: [i32; 2],
    pub teamVoteModified: [crate::src::qcommon::q_shared::qboolean; 2],
    pub teamVoteString: [[i8; 1024]; 2],
    pub levelStartTime: i32,
    pub scores1: i32,
    pub scores2: i32,
    pub redflag: i32,
    pub blueflag: i32,
    pub flagStatus: i32,
    pub newHud: crate::src::qcommon::q_shared::qboolean,
    pub gameModels: [crate::src::qcommon::q_shared::qhandle_t; 256],
    pub gameSounds: [crate::src::qcommon::q_shared::sfxHandle_t; 256],
    pub numInlineModels: i32,
    pub inlineDrawModel: [crate::src::qcommon::q_shared::qhandle_t; 256],
    pub inlineModelMidpoints: [crate::src::qcommon::q_shared::vec3_t; 256],
    pub clientinfo: [crate::cg_local_h::clientInfo_t; 64],
    pub teamChatMsgs: [[i8; 241]; 8],
    pub teamChatMsgTimes: [i32; 8],
    pub teamChatPos: i32,
    pub teamLastChatPos: i32,
    pub cursorX: i32,
    pub cursorY: i32,
    pub eventHandling: crate::src::qcommon::q_shared::qboolean,
    pub mouseCaptured: crate::src::qcommon::q_shared::qboolean,
    pub sizingHud: crate::src::qcommon::q_shared::qboolean,
    pub capturedItem: *mut libc::c_void,
    pub activeCursor: crate::src::qcommon::q_shared::qhandle_t,
    pub currentOrder: i32,
    pub orderPending: crate::src::qcommon::q_shared::qboolean,
    pub orderTime: i32,
    pub currentVoiceClient: i32,
    pub acceptOrderTime: i32,
    pub acceptTask: i32,
    pub acceptLeader: i32,
    pub acceptVoice: [i8; 32],
    pub media: crate::cg_local_h::cgMedia_t,
}
pub type leType_t = u32;
pub type leMarkType_t = u32;
pub type leBounceSoundType_t = u32;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct localEntity_s {
    pub prev: *mut crate::cg_local_h::localEntity_s,
    pub next: *mut crate::cg_local_h::localEntity_s,
    pub leType: crate::cg_local_h::leType_t,
    pub leFlags: i32,
    pub startTime: i32,
    pub endTime: i32,
    pub fadeInTime: i32,
    pub lifeRate: f32,
    pub pos: crate::src::qcommon::q_shared::trajectory_t,
    pub angles: crate::src::qcommon::q_shared::trajectory_t,
    pub bounceFactor: f32,
    pub color: [f32; 4],
    pub radius: f32,
    pub light: f32,
    pub lightColor: crate::src::qcommon::q_shared::vec3_t,
    pub leMarkType: crate::cg_local_h::leMarkType_t,
    pub leBounceSoundType: crate::cg_local_h::leBounceSoundType_t,
    pub refEntity: crate::tr_types_h::refEntity_t,
}
pub type localEntity_t = crate::cg_local_h::localEntity_s;
pub const FOOTSTEP_TOTAL: crate::cg_local_h::footstep_t = 7;
pub const FOOTSTEP_SPLASH: crate::cg_local_h::footstep_t = 6;
pub const FOOTSTEP_METAL: crate::cg_local_h::footstep_t = 5;
pub const FOOTSTEP_ENERGY: crate::cg_local_h::footstep_t = 4;
pub const FOOTSTEP_MECH: crate::cg_local_h::footstep_t = 3;
pub const FOOTSTEP_FLESH: crate::cg_local_h::footstep_t = 2;
pub const FOOTSTEP_BOOT: crate::cg_local_h::footstep_t = 1;
pub const FOOTSTEP_NORMAL: crate::cg_local_h::footstep_t = 0;
pub const LE_SCOREPLUM: crate::cg_local_h::leType_t = 8;
pub const LE_SCALE_FADE: crate::cg_local_h::leType_t = 7;
pub const LE_FADE_RGB: crate::cg_local_h::leType_t = 6;
pub const LE_FALL_SCALE_FADE: crate::cg_local_h::leType_t = 5;
pub const LE_MOVE_SCALE_FADE: crate::cg_local_h::leType_t = 4;
pub const LE_FRAGMENT: crate::cg_local_h::leType_t = 3;
pub const LE_SPRITE_EXPLOSION: crate::cg_local_h::leType_t = 2;
pub const LE_EXPLOSION: crate::cg_local_h::leType_t = 1;
pub const LE_MARK: crate::cg_local_h::leType_t = 0;
pub const LEF_SOUND2: crate::src::qcommon::q_shared::C2RustUnnamed_0 = 8;
pub const LEF_SOUND1: crate::src::qcommon::q_shared::C2RustUnnamed_0 = 4;
pub const LEF_TUMBLE: crate::src::qcommon::q_shared::C2RustUnnamed_0 = 2;
pub const LEF_PUFF_DONT_SCALE: crate::src::qcommon::q_shared::C2RustUnnamed_0 = 1;
pub const LEMT_BLOOD: crate::cg_local_h::leMarkType_t = 2;
pub const LEMT_BURN: crate::cg_local_h::leMarkType_t = 1;
pub const LEMT_NONE: crate::cg_local_h::leMarkType_t = 0;
pub const LEBS_BRASS: crate::cg_local_h::leBounceSoundType_t = 2;
pub const LEBS_BLOOD: crate::cg_local_h::leBounceSoundType_t = 1;
pub const LEBS_NONE: crate::cg_local_h::leBounceSoundType_t = 0;
